spring:
  profiles:
    include: local, jwt, oauth

  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&useSSL=false
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 100
        dialect: org.hibernate.dialect.MySQL8Dialect

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            client-id: ${GOOGLE_CLIENT}
#            client-secret: ${GOOGLE_SECRET}
#            redirect-uri: ${BASE_URL}/login/oauth2/code/google
#            authorization-grant-type: authorization_code
#            scope:
#              - profile
#              - email

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 800MB

logging.level:
  shop.matddang: debug

management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

etc:
  base-url: ${BASE_URL}
  front-url: ${FRONT_URL}
  front-auth-success: ${FRONT_URL}/auth/success

jwt:
  expiration:
    access: ${ACCESS_EXPIRATION}
    refresh: ${REFRESH_EXPIRATION}
  secret: ${JWT_SECRET}
